name: Nightly Releases

on:
  push:
    branches: [ main, ci/nightlies ]
  pull_request:
    branches: [ main ]

jobs:
  # Eventually this https://github.community/t/create-matrix-with-multiple-os-and-env-for-each-one/16895/5
  macbuild:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2

      - name: install ninja
        run: brew install ninja

      - name: get supercollider source
        run: git clone --recursive https://github.com/supercollider/supercollider.git sdk
        
      - name: make build directory
        run: mkdir -p build
        
      - name: cmake
        run: cmake -GNinja -DSC_PATH=../sdk ..
        working-directory: build
        
      - name: install
        run: ninja install
        working-directory: build

      - uses: actions/upload-artifact@v2                                                                                                                                                 
        with:                                                                                                                                                                            
          name: macbuild                                                                                                                                                                 
          path: release-packaging/

  winbuild:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: get supercollider source
        run: git clone --recursive https://github.com/supercollider/supercollider.git sdk
        
      - name: make build directory
        run: mkdir build
        
      - name: cmake
        run: cmake -DSC_PATH="../sdk" ..
        working-directory: build
        
      - name: install
        run: cmake --build . --target install
        working-directory: build

      - name: remove pdb files
        run: del /S *.pdb
        working-directory: release-packaging

      - uses: actions/upload-artifact@v2                                                                                                                                                 
        with:                                                                                                                                                                            
          name: winbuild                                                                                                                                                              
          path: release-packaging/

  linuxbuild:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: get supercollider source
        run: git clone --recursive https://github.com/supercollider/supercollider.git sdk
        
      - name: make build directory
        run: mkdir build
        
      - name: cmake
        run: cmake -DSC_PATH=../sdk ..
        working-directory: build
        
      - name: install
        run: make install
        working-directory: build
      
      - uses: actions/upload-artifact@v2                                                                                                                                                 
        with:                                                                                                                                                                            
          name: linuxbuild                                                                                                                                                            
          path: release-packaging/
  
  release:
    runs-on: ubuntu-latest
    needs: [macbuild, winbuild, linuxbuild]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: macbuild
          path: FluCoMa-SC-Mac-nightly
      
      - uses: actions/download-artifact@v2
        with:
          name: winbuild
          path: FluCoMa-SC-Windows-nightly

      - uses: actions/download-artifact@v2
        with:
          name: linuxbuild
          path: FluCoMa-SC-Linux-nightly
      
      - name: zip mac
        run: zip -r FluCoMa-SC-Mac-nightly.zip FluCoMa-SC-Mac-nightly
      
      - name: zip win
        run: zip -r FluCoMa-SC-Windows-nightly.zip FluCoMa-SC-Windows-nightly

      - name: zip linux
        run: zip -r FluCoMa-SC-Linux-nightly.zip FluCoMa-SC-Linux-nightly
        
      - name: package and upload
        uses: svenstaro/upload-release-action@v2
        with:
          release_name: FluCoMa Max Nightly Build
          prerelease: true
          body: "This is a nightly build of the FluCoMa Max package. As such, be warned there may be bugs or other unexpected behaviour. The build hash is ${{ github.sha }}"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: FluCoMa-SC-*.zip
          file_glob: true
          tag: nightly
          overwrite: true